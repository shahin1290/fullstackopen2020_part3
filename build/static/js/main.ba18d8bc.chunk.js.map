{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","PersonForm","persons","setPersons","newName","setNewName","newNumber","setNewNumber","notification","setNotification","onSubmit","e","preventDefault","some","person","name","trim","personFound","find","changedPerson","number","window","confirm","personService","returnedPerson","map","message","type","concat","value","onChange","target","Filter","searchText","setSearchText","Persons","filteredPersons","filter","toLowerCase","includes","onClick","item","catch","err","deletePerson","Notification","className","setTimeout","App","useState","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba18d8bc.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request =  axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request =  axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request =  axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst destroy = (id) => {\n  const request =  axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, destroy, update }\n ","import personService from '../services/persons'\n\nconst PersonForm = ({\n  persons,\n  setPersons,\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  notification,\n  setNotification \n}) => {\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n\n    const isNameExists = persons.some(\n      (person) => person.name === newName.trim()\n    )\n\n    if (isNameExists) {\n      const personFound = persons.find((person) => person.name === newName)\n      const changedPerson = { ...personFound, number: newNumber }\n      if (\n        window.confirm(\n          `${newName.trim()} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .update(personFound.id, changedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== personFound.id ? person : returnedPerson\n              )\n            )\n            setNewName('')\n            setNewNumber('')\n            setNotification({...notification, message:`${newName} has been updated successfully`, type: 'success'})\n          })\n      }\n    } else {\n      personService\n        .create({\n          name: newName.trim(),\n          number: newNumber,\n        })\n        .then((response) => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n          setNotification({...notification, message:`Added ${newName}`, type: 'success'})\n          \n        })\n    }\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react';\n\nconst Filter = ({searchText, setSearchText}) => {\n  const handleSearchChange = (e) => {\n    setSearchText(e.target.value)\n  }\n\n  return (\n    <div>\n      filter shown with:\n      <input value={searchText} onChange={handleSearchChange} />\n    </div>\n  );\n};\n\nexport default Filter;","import React from 'react'\nimport personService from '../services/persons'\n\nconst Persons = ({\n  persons,\n  searchText,\n  setPersons,\n  notification,\n  setNotification,\n}) => {\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().includes(searchText)\n  )\n\n  const deletePerson = (person) => {\n    const { id, name } = person\n\n    if (window.confirm(`Delete ${name} ?`))\n      personService.destroy(person.id).then(() => {\n        setPersons(persons.filter((item) => item.id !== id))\n        setNotification({...notification, message: `Information of ${name} has been removed from server`, type: 'success'})\n      }).catch((err) => {\n        setNotification({...notification, message: `Information of ${name} has already been removed from server`, type: 'danger'})\n        setPersons(persons.filter((item) => item.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      {filteredPersons.map((person) => (\n        <div key={person.name}>\n          {person.name} {person.number}{' '}\n          <button onClick={() => deletePerson(person)}>delete</button>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ notification, setNotification }) => {\n  const removeNotification = () => {\n    setTimeout(() => {\n      setNotification({ ...notification, message: null, type: '' })\n    }, 3000)\n  }\n\n  if (notification.message === null) {\n    return null\n  }\n\n  return (\n    <div className={`notification ${notification.type}`}>\n      {notification.message}\n      {removeNotification()}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchText, setSearchText] = useState('')\n  const [notification, setNotification] = useState({ message: null, type: '' })\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response)\n    })\n  }, [])\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification\n        notification={notification}\n        setNotification={setNotification}\n      />\n\n      <Filter searchText={searchText} setSearchText={setSearchText} />\n\n      <h3>add a New</h3>\n\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        notification={notification}\n        setNotification={setNotification}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons\n        persons={persons}\n        searchText={searchText}\n        setPersons={setPersons}\n        notification={notification}\n        setNotification={setNotification}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}